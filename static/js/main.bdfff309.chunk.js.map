{"version":3,"sources":["components/FindContacts/FindContacts.module.css","App.module.css","components/AddContact/AddContact.module.css","components/AddContact/AddContact.js","components/ContactList/ContactList.js","components/FindContacts/FindContacts.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","INITIAL_STATE","name","number","AddContact","state","handelChange","target","value","setState","handelSubmit","e","preventDefault","searchRepeatName","length","props","onSubmit","alert","normalizedName","this","toLowerCase","contacts","filter","contact","className","style","form","form__item","form__input","type","pattern","title","required","onChange","Component","ContactList","contactsList","onClick","list","map","item","list__button","id","FindContacts","input","App","addContact","uuidv4","changeFilter","currentTarget","findContacts","normalizedFilter","includes","deleteContact","contactId","prevState","visibleContacts","wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdfff309.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FindContacts_input__8A1Vf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__7VCyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__1nGnq\",\"form__item\":\"AddContact_form__item__2yTml\",\"form__input\":\"AddContact_form__input__2hLo1\"};","import { Component } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport style from \"./AddContact.module.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport class AddContact extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handelChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  searchRepeatName() {\r\n    const { name } = this.state;\r\n    const normalizedName = name.toLowerCase();\r\n    return this.props.contacts.filter(\r\n      (contact) => contact.name.toLowerCase() === normalizedName\r\n    );\r\n  }\r\n\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.searchRepeatName().length !== 0) {\r\n      alert(`${this.state.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.onSubmit({ ...this.state });\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={style.form} onSubmit={this.handelSubmit}>\r\n        <label className={style.form__item}>\r\n          Name\r\n          <input\r\n            className={style.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <label className={style.form__item}>\r\n          Number\r\n          <input\r\n            className={style.form__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// AddContact.propsTypes = {\r\n//   contacts: PropTypes.arrayFor(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.required,\r\n//       name: PropTypes.string.required,\r\n//       number: PropTypes.number.required,\r\n//     })\r\n//   ),\r\n// };\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\nexport const ContactList = ({ contactsList, onClick }) => {\r\n  return (\r\n    <>\r\n      <ul className={style.list}>\r\n        {contactsList.map((item) => (\r\n          <li key={item.id} className={style.item}>\r\n            <span>\r\n              {item.name}: {item.number}\r\n            </span>\r\n            <button\r\n              className={style.list__button}\r\n              onClick={() => onClick(item.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\n// ContactList.propsTypes = {\r\n//   contactsList: PropTypes.arrayFor(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.required,\r\n//       name: PropTypes.string.required,\r\n//       number: PropTypes.number.required,\r\n//     })\r\n//   ),\r\n// };\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./FindContacts.module.css\";\r\n\r\nexport const FindContacts = ({ value, onChange }) => (\r\n  <>\r\n    <h1>Contacts</h1>\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\n// FindContacts.propsTypes = {\r\n//   value: PropTypes.string.required,\r\n// };\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AddContact } from \"./components/AddContact\";\nimport { ContactList } from \"./components/ContactList\";\nimport { FindContacts } from \"./components/FindContacts\";\nimport style from \"./App.module.css\";\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  findContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.findContacts();\n    return (\n      <div className={style.wrapper}>\n        <h1>Phonebook</h1>\n        <AddContact onSubmit={this.addContact} contacts={this.state.contacts} />\n        <FindContacts value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contactsList={visibleContacts}\n          onClick={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Ce1i\",\"item\":\"ContactList_item__3kYQT\",\"list__button\":\"ContactList_list__button__3MJmi\"};"],"sourceRoot":""}