{"version":3,"sources":["components/AddContact/AddContact.js","components/ContactList/ContactList.js","components/FindContacts/FindContacts.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","name","number","AddContact","state","handelChange","target","value","setState","handelSubmit","e","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","contactsList","map","item","id","FindContacts","App","contacts","addContact","contact","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEMA,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGGC,EAAb,4MACEC,MADF,eACeJ,GADf,EAGEK,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,KAL5B,EAQEE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAX,eAAyB,EAAKT,QAC9B,EAAKI,SAAL,eAAmBR,KAXvB,4CAcE,WACE,OACE,uBAAMa,SAAUC,KAAKL,aAArB,UACE,kCACG,IADH,OAGE,uBACEM,KAAK,OACLd,KAAK,OACLM,MAAOO,KAAKV,MAAMH,KAClBe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKT,kBAGnB,kCACG,IADH,SAGE,uBACEU,KAAK,MACLd,KAAK,SACLM,MAAOO,KAAKV,MAAMF,OAClBc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKT,kBAGnB,wBAAQU,KAAK,SAAb,gHA3CR,GAAgCK,aCPnBC,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,qCACE,0CACA,6BACGA,EAAaC,KAAI,SAACC,GAAD,OAChB,+BACGA,EAAKvB,KADR,KACgBuB,EAAKtB,SADZsB,EAAKC,aCNXC,EAAe,kBAC1B,mCACE,0DAEE,uBAAOX,KAAK,eCCLY,EAAb,4MACEvB,MAAQ,CACNwB,SAAU,CACR,CAAEH,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuB,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,eANpD,EAUE2B,WAAa,YAAuB,IAC5BC,EAAU,CACd7B,KAF+B,EAAnBA,KAGZC,OAH+B,EAAbA,OAIlBuB,GAAIM,eAEN,EAAKvB,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEE,GAAH,mBAAeF,SAjB7B,4CAqBE,WACE,OACE,qCACE,2CACA,cAAC,EAAD,CAAYf,SAAUC,KAAKe,aAC3B,cAAC,EAAD,IACA,cAAC,EAAD,CAAaP,aAAcR,KAAKV,MAAMwB,kBA3B9C,GAAyBR,aCOVY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17acff07.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport class AddContact extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handelChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handelSubmit}>\r\n        <label>\r\n          {\" \"}\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          {\" \"}\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Добавить контакт</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export const ContactList = ({ contactsList }) => {\r\n  return (\r\n    <>\r\n      <h1>Contacts</h1>\r\n      <ul>\r\n        {contactsList.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name}: {item.number}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","export const FindContacts = () => (\r\n  <>\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" />\r\n    </label>\r\n  </>\r\n);\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { AddContact } from \"./components/AddContact\";\nimport { ContactList } from \"./components/ContactList\";\nimport { FindContacts } from \"./components/FindContacts\";\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <AddContact onSubmit={this.addContact} />\n        <FindContacts />\n        <ContactList contactsList={this.state.contacts} />\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}